<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myTinyLibrary.user.model.mapper.UserMapper">

	<resultMap type="userDto" id="user">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
	</resultMap>
	
	<!-- ADMIN -->
	<resultMap type="userDto" id="userDetail" extends="user">
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		<result column="joindate" property="joinDate"/>
	</resultMap>
	
	<!-- ADMIN -->
	<resultMap type="authorsDto" id="authors">
		<result column="idx" property="idx"/>
		<result column="id" property="id"/>
		<result column="author_name" property="authorName"/>
	</resultMap>

	<select id="idCheck" parameterType="String" resultType="int">
		select count(`id`)
		from `user`
		where `id` = #{id}
	</select>

	<insert id="joinUser" parameterType="userDto">
		insert into `user` (`id`, `name`, `password`, `email`, `joindate`)
		values (#{id}, #{name}, #{password}, #{email}, now())
	</insert>

	<select id="login" parameterType="map" resultMap="user">
		select `id`, `name`
		from `user`
		where `id` = #{id} and `password` = #{password}
	</select>
	
	<select id="getUser" parameterType="string" resultMap="userDetail">
		select `id`, `name`, `password`, `email`, `joindate`
		from `user`
		where `id` = #{id}
	</select>
	
	<update id="updateUser" parameterType="userDto">
		update `user`
		<trim prefix="set" suffixOverrides=",">
			<if test="password != null">`password` = #{password},</if>
			<if test="email != null">`email` = #{email},</if>
		</trim>
		where `id` = #{id}
	</update>
	
	<delete id="deleteUser" parameterType="String">
		delete from `user`
		where `id` = #{id}
	</delete>
	
	<!-- ADMIN -->
	<insert id="registAuthor" parameterType="authorsDto">
		insert into `authors` (`id`, `author_name`)
		values (#{id}, #{authorName})
	</insert>
	
	<!-- ADMIN -->
	<select id="listUser" resultMap="userDetail">
		select `id`, `name`, `password`, `email`, `joindate`
		from `user`
		order by `joindate`
	</select>
	
	<!-- ADMIN -->
	<select id="listAuthors" resultMap="authors">
		select `idx`, `id`, `author_name`
		from `authors`
		order by `idx`
	</select>
	
	<!-- ADMIN -->
	<select id="getAuthors" parameterType="string" resultMap="authors">
		select `idx`, `id`, `author_name`
		from `authors`
		where `id` = #{id}
	</select>
	
	<!-- ADMIN -->
	<update id="updateAuthors" parameterType="authorsDto">
		update `authors`
		<trim prefix="set" suffixOverrides=",">
			<if test="authorName != null">`author_name` = #{authorName},</if>
		</trim>
		where `id` = #{id}
	</update>
	
	<delete id="deleteAuthors" parameterType="String">
		delete from `authors`
		where `id` = #{id}
	</delete>
	
</mapper>